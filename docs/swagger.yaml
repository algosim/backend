basePath: /api/v1
definitions:
  http.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  http.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  http.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  http.UserResponse:
    properties:
      atcoder_handle:
        type: string
      codeforces_handle:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      oauth_provider:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Authentication service for Problem Tracking & Challenge System
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Auth Service API
  version: "1.0"
paths:
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidates the refresh token
      parameters:
      - description: Logout data
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/http.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Logout
      tags:
      - auth
  /auth/oauth/callback:
    get:
      consumes:
      - application/json
      description: Handles the callback from OAuth provider
      parameters:
      - description: Authorization code from OAuth provider
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.TokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: OAuth Callback
      tags:
      - auth
  /auth/oauth/login:
    get:
      consumes:
      - application/json
      description: Redirects to Google OAuth login page
      parameters:
      - description: OAuth provider (e.g., google)
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirect to OAuth provider
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Initiate OAuth Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generates a new access token using refresh token
      parameters:
      - description: Refresh token data
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/http.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.TokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Refresh Token
      tags:
      - auth
  /auth/validate:
    get:
      consumes:
      - application/json
      description: Validates the access token and returns user information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.UserResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Validate Token
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
